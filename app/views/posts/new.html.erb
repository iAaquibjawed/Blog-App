<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Post - AI Auto-Scaling Platform</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            color: #333;
        }

        /* Header */
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            max-width: 1000px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .back-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            color: #667eea;
            font-weight: 600;
            transition: color 0.3s ease;
        }

        .back-btn:hover {
            color: #4f46e5;
        }

        .page-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #374151;
        }

        .ai-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: linear-gradient(45deg, #4ade80, #22c55e);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-size: 0.9rem;
            font-weight: 600;
        }

        /* Main Container */
        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 2rem;
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
        }

        /* Post Creation Form */
        .post-form-section {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .form-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #374151;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #374151;
        }

        .form-input {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            min-height: 200px;
            resize: vertical;
            font-family: inherit;
        }

        .form-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            flex: 1;
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.7);
            color: #374151;
            border: 2px solid #e5e7eb;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        /* AI Sidebar */
        .ai-sidebar {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .ai-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        }

        .ai-card-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: #374151;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        /* Performance Metrics */
        .metrics-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .metric-item {
            text-align: center;
            padding: 0.75rem;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 8px;
        }

        .metric-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: #667eea;
        }

        .metric-label {
            font-size: 0.8rem;
            color: #6b7280;
            margin-top: 0.25rem;
        }

        /* AI Tips */
        .ai-tip {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem;
            border-radius: 10px;
            font-size: 0.9rem;
            line-height: 1.5;
            position: relative;
            overflow: hidden;
        }

        .ai-tip::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            animation: shimmer 3s infinite;
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        /* Scaling Alert */
        .scaling-alert {
            background: rgba(34, 197, 94, 0.1);
            border: 1px solid rgba(34, 197, 94, 0.3);
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .alert-title {
            font-weight: 600;
            color: #22c55e;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .alert-text {
            font-size: 0.9rem;
            color: #065f46;
            line-height: 1.4;
        }

        /* Progress Bar */
        .progress-container {
            margin: 1rem 0;
        }

        .progress-label {
            font-size: 0.9rem;
            color: #6b7280;
            margin-bottom: 0.5rem;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 4px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 4px;
            transition: width 0.3s ease;
            animation: pulse-progress 2s infinite;
        }

        @keyframes pulse-progress {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }

        /* Character Counter */
        .char-counter {
            text-align: right;
            font-size: 0.8rem;
            color: #6b7280;
            margin-top: 0.5rem;
        }

        .char-counter.warning {
            color: #f59e0b;
        }

        .char-counter.danger {
            color: #ef4444;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .container {
                grid-template-columns: 1fr;
                padding: 1rem;
                gap: 1rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .form-buttons {
                flex-direction: column;
            }

            .metrics-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <a href="/users" class="back-btn">
                ‚Üê Back to Dashboard
            </a>
            <h1 class="page-title">Create New Post</h1>
            <div class="ai-status">
                <span>ü§ñ</span>
                <span>AI Monitoring</span>
            </div>
        </div>
    </header>

    <!-- Main Container -->
    <div class="container">
        <!-- Post Creation Form -->
        <section class="post-form-section">
            <h2 class="form-title">
                ‚úçÔ∏è Write Your Post
            </h2>

            <form action="/users/<%= current_user&.id %>/posts" method="POST">
                <div class="form-group">
                    <label for="title" class="form-label">Post Title</label>
                    <input
                        type="text"
                        id="title"
                        name="post[title]"
                        class="form-input"
                        placeholder="Enter an engaging title..."
                        required
                        maxlength="250"
                    >
                    <div class="char-counter" id="title-counter">0/250</div>
                </div>

                <div class="form-group">
                    <label for="content" class="form-label">Post Content</label>
                    <textarea
                        id="content"
                        name="post[text]"
                        class="form-input form-textarea"
                        placeholder="Share your thoughts with the community..."
                        required
                    ></textarea>
                    <div class="char-counter" id="content-counter">0 characters</div>
                </div>

                <div class="form-buttons">
                    <button type="submit" class="btn btn-primary">
                        üöÄ Publish Post
                    </button>
                    <a href="/users" class="btn btn-secondary">
                        üìù Save Draft
                    </a>
                </div>
            </form>
        </section>

        <!-- AI Sidebar -->
        <aside class="ai-sidebar">
            <!-- Scaling Status -->
            <div class="ai-card">
                <h3 class="ai-card-title">
                    üìä Current Platform Status
                </h3>

                <div class="scaling-alert">
                    <div class="alert-title">
                        ‚ö° Optimal Performance
                    </div>
                    <div class="alert-text">
                        AI has pre-scaled infrastructure for your post. Ready for immediate publishing!
                    </div>
                </div>

                <div class="metrics-grid">
                    <div class="metric-item">
                        <div class="metric-value" id="active-readers">84</div>
                        <div class="metric-label">Active Readers</div>
                    </div>
                    <div class="metric-item">
                        <div class="metric-value" id="server-load">23%</div>
                        <div class="metric-label">Server Load</div>
                    </div>
                </div>

                <div class="progress-container">
                    <div class="progress-label">Platform Capacity</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: 75%" id="capacity-bar"></div>
                    </div>
                </div>
            </div>

            <!-- AI Writing Tips -->
            <div class="ai-card">
                <h3 class="ai-card-title">
                    üß† AI Writing Assistant
                </h3>

                <div class="ai-tip" id="writing-tip">
                    Posts with questions get 40% more engagement. Consider ending with a thought-provoking question!
                </div>
            </div>

            <!-- Engagement Predictor -->
            <div class="ai-card">
                <h3 class="ai-card-title">
                    üìà Engagement Predictor
                </h3>

                <div class="metrics-grid">
                    <div class="metric-item">
                        <div class="metric-value" id="predicted-views">~150</div>
                        <div class="metric-label">Expected Views</div>
                    </div>
                    <div class="metric-item">
                        <div class="metric-value" id="predicted-engagement">92%</div>
                        <div class="metric-label">Engagement Score</div>
                    </div>
                </div>

                <div class="progress-container">
                    <div class="progress-label">Viral Potential</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: 68%" id="viral-bar"></div>
                    </div>
                </div>
            </div>

            <!-- Real-time Updates -->
            <div class="ai-card">
                <h3 class="ai-card-title">
                    üì° Real-time Updates
                </h3>

                <div class="alert-text" id="live-update">
                    2 users currently writing posts. Server capacity automatically increased by 15%.
                </div>
            </div>
        </aside>
    </div>

    <script>
        // Character counters
        function setupCharacterCounters() {
            const titleInput = document.getElementById('title');
            const contentInput = document.getElementById('content');
            const titleCounter = document.getElementById('title-counter');
            const contentCounter = document.getElementById('content-counter');

            titleInput.addEventListener('input', () => {
                const length = titleInput.value.length;
                titleCounter.textContent = `${length}/250`;

                if (length > 200) {
                    titleCounter.className = 'char-counter warning';
                } else if (length > 240) {
                    titleCounter.className = 'char-counter danger';
                } else {
                    titleCounter.className = 'char-counter';
                }
            });

            contentInput.addEventListener('input', () => {
                const length = contentInput.value.length;
                contentCounter.textContent = `${length} characters`;

                // Update engagement prediction based on content length
                updateEngagementPrediction(length);
            });
        }

        // Update engagement prediction
        function updateEngagementPrediction(contentLength) {
            const predictedViews = document.getElementById('predicted-views');
            const predictedEngagement = document.getElementById('predicted-engagement');
            const viralBar = document.getElementById('viral-bar');

            // Simple algorithm based on content length
            let views = Math.max(50, Math.min(500, 100 + contentLength * 0.5));
            let engagement = Math.max(20, Math.min(95, 60 + contentLength * 0.1));
            let viral = Math.max(10, Math.min(90, 30 + contentLength * 0.08));

            predictedViews.textContent = `~${Math.round(views)}`;
            predictedEngagement.textContent = `${Math.round(engagement)}%`;
            viralBar.style.width = `${viral}%`;
        }

        // AI Writing Tips
        function rotateWritingTips() {
            const tips = [
                "Posts with questions get 40% more engagement. Consider ending with a thought-provoking question!",
                "Including personal experiences increases relatability by 60%. Share your story!",
                "Posts between 200-400 words perform best. You're in the sweet spot!",
                "Using emojis increases engagement by 25%. Add some personality! üòä",
                "Lists and bullet points improve readability by 45%. Structure your content!",
                "Call-to-action phrases boost interaction by 35%. Ask readers to comment!",
                "Original insights get shared 3x more than generic content. Be unique!",
                "Posts published now have 20% higher visibility. Perfect timing!"
            ];

            const tipElement = document.getElementById('writing-tip');
            let currentTip = 0;

            setInterval(() => {
                currentTip = (currentTip + 1) % tips.length;
                tipElement.textContent = tips[currentTip];
            }, 8000);
        }

        // Real-time metrics simulation
        function simulateRealTimeMetrics() {
            const activeReaders = document.getElementById('active-readers');
            const serverLoad = document.getElementById('server-load');
            const capacityBar = document.getElementById('capacity-bar');
            const liveUpdate = document.getElementById('live-update');

            const updates = [
                "3 users currently writing posts. AI optimizing database connections.",
                "High engagement detected on recent posts. Scaling content delivery network.",
                "New user joined the platform. Welcome message system activated.",
                "Peak hour approaching. AI pre-scaling infrastructure by 25%.",
                "Machine learning model updated with latest engagement patterns.",
                "Cache optimization complete. Response times improved by 12%."
            ];

            setInterval(() => {
                // Update metrics
                const readers = 70 + Math.floor(Math.random() * 30);
                const load = 15 + Math.floor(Math.random() * 20);
                const capacity = 60 + Math.floor(Math.random() * 30);

                activeReaders.textContent = readers;
                serverLoad.textContent = load + '%';
                capacityBar.style.width = capacity + '%';

                // Update live status
                if (Math.random() < 0.3) {
                    liveUpdate.textContent = updates[Math.floor(Math.random() * updates.length)];
                }
            }, 5000);
        }

        // Form submission with AI feedback
        function setupFormSubmission() {
            const form = document.querySelector('form');

            form.addEventListener('submit', (e) => {
                // Add visual feedback
                const submitBtn = document.querySelector('.btn-primary');
                submitBtn.innerHTML = 'üöÄ Publishing... AI Optimizing';
                submitBtn.style.background = 'linear-gradient(45deg, #22c55e, #16a34a)';

                // Simulate AI processing
                setTimeout(() => {
                    submitBtn.innerHTML = '‚úÖ Published Successfully!';
                }, 1000);
            });
        }

        // Initialize all features
        document.addEventListener('DOMContentLoaded', () => {
            setupCharacterCounters();
            rotateWritingTips();
            simulateRealTimeMetrics();
            setupFormSubmission();
        });

        // Add smooth animations for form elements
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('focus', () => {
                input.style.transform = 'scale(1.02)';
                input.style.transition = 'all 0.3s ease';
            });

            input.addEventListener('blur', () => {
                input.style.transform = 'scale(1)';
            });
        });
    </script>
</body>
</html>